using Microsoft.VisualStudio.TestTools.UnitTesting;
using VintriCore.Controllers;
using System;
using System.Collections.Generic;
using System.Text;
using System.Net.Http;
using Microsoft.VisualStudio.TestPlatform.ObjectModel;
using System.IO.Abstractions;
using AutoFixture;
using Moq;
using Microsoft.AspNetCore.Hosting;

namespace VintriCore.Controllers.Tests
{
    [TestClass()]
    public class BeerListControllerTests
    {

        //
        //readonly Mock<IHttpClientFactory> _httpClient;
        //        readonly Mock<IHostingEnvironment> _hostingEnv;
        //        readonly Mock<IFileSystem> _fileSystem;


        //        readonly Fixture _fixture;


        public BeerListControllerTests()
        {


        }
        [TestMethod()]
        public void GetAsyncTest()
        {

            //            _fixture = new Fixture();

            //            _httpClient = new Mock<IHttpClientFactory>();
            //            _hostingEnv = new Mock<IHostingEnvironment>();
            //            _fileSystem = new Mock<IFileSystem>();

            //            _httpClient.Setup(s => s.CreateClient().GetAsync(""));








            //            HttpClient stockFeed =
            //            new HttpClient.Fakes.// Generated by Fakes.


            //            var stub = new StubIhht();

            //            BeerListController beerListController = new BeerListController(httpClientFactoryMock, );




            Assert.Fail();
        }

        [TestMethod()]
        public void GetAsyncTest1()
        {
            Assert.Fail();
        }
    }
}

namespace VintriCoreTests.Controllers
{
    class BeerListControllerTests
    {
    }
}
